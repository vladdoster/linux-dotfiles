#!/usr/bin/env python

# @Author: Vlad Doster <mvdoster@gmail.com>
# @Date: 2020-06-17 21:56:33
# @Last Modified by: Vlad Doster <mvdoster@gmail.com>
# @Last Modified time: 2020-08-09 23:09:28

import argparse
import os
import sys
import time

# Create CLI parser
parser = argparse.ArgumentParser(prog="mk_sh_script", description="Create new shell script(s) with shebang and is executable.", formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument("-e", "--f-ext", choices=[".bash", ".sh"], default="", dest="f_ext", help="Add a file extension.")
parser.add_argument("-p", "--path", default=os.getcwd(), dest="path", help="Path that scripts should be created at", metavar="PATH", type=str, nargs=1)
parser.add_argument("-s", "--shell", choices=["bash", "fish", "ksh", "sh", "zsh"], default="bash", dest="shell", help="The shell to be used in shebang.")
parser.add_argument("file_names", nargs="+", help="File name(s) of scripts to be created.")

# Parse user arguments
args = parser.parse_args()
path, shell = args.path, args.shell

# Poor mans here-doc
shell_script_boilerplate = """\
#/usr/bin/env {0}
#
# <purpose>
#
# Copyright (c) {1} Vlad Doster <mvdoster@gmail.com>
#

""".format(args.shell, time.strftime("%Y"))

# Create shell script(s)
for f_name in args.file_names:
    f_name = "{0}/{1}{2}".format(path, f_name, args.f_ext)
    with open(f_name, mode="w") as new_shell_script:
        new_shell_script.write(shell_script_boilerplate)
    os.chmod(f_name, 0o755)

print("Successfully made sh scripts {0}".format(", ".join(args.file_names)))
