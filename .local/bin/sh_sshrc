#!/usr/bin/env bash

function check_for_openssl()
{
  command -v openssl > /dev/null 2>&1 ||
    {
      printf "SSHrc requires openssl to be installed. Exiting."
      exit 1
    }
}

function check_for_files()
{
  local LOCAL_SSHRC_DIR="${SSHHOME:=~}"
  if [ -f "$LOCAL_SSHRC_DIR"/sshrc ]; then
    local LOCAL_FILES="sshrc"
  fi
  if [ -d "$LOCAL_SSHRC_DIR"/sshrc.d ]; then
    LOCAL_FILES="$LOCAL_FILES sshrc.d"
  fi
  SIZE=$(tar cfz - -h -C "$LOCAL_SSHRC_DIR" "$LOCAL_FILES" | wc -c)
  if [ "$SIZE" -gt 65536 ]; then
    printf "SSHrc.d and sshrc files must be smaller than 64kb\nCurrent size: %d bytes\n" "$SIZE"
    exit 1
  fi
  printf "SSHRC_DIR: %s\nFiles: %s\nFiles size: %s KiB\n" "$SSHRC_DIR" "$FILES" "$SIZE"
}

source_files_cmd="
if [ -r /etc/profile ]; then
  source /etc/profile; 
fi
if [ -r ~/.bash_profile ]; then
  source ~/.bash_profile
elif [ -r ~/.bash_login ]; then 
  source ~/.bash_login
elif [ -r ~/.profile ]; then 
  source ~/.profile
fi
"

function to_base64() {
  echo $'"$( cat << 'EOF' | openssl enc --base64 )"'
}

function sshrc(){
  check_for_openssl
  export REMOTE_SSHRC_DIR=$(mktemp -d -t .$(whoami)sshrc.XXXX)
  export REMOTE_SSHRC_CLEANUP="$REMOTE_SSHRC_DIR"
  trap rm -rf $REMOTE_SSHRC_CLEANUP; exit 0;
  $(cat "$0" | openssl enc -base64)" | tr -s ' ' $'\n' | openssl enc -base64 -d > "$REMOTE_SSHRC_DIR/sshrc"
    chmod +x \$SSHHOME/sshrc
    echo $'"$( cat << 'EOF' | openssl enc -base64
    export PATH=$PATH:$SSHHOME
    source $SSHHOME/sshrc;
EOF
)"' | tr -s ' ' $'\n' | openssl enc -base64 -d > \$SSHHOME/sshrc.bashrc
            echo $'"$( cat << 'EOF' | openssl enc -base64
#!/usr/bin/env bash
exec bash --rcfile <(echo '
[ -r /etc/profile ] && source /etc/profile
if [ -r ~/.bash_profile ]; then source ~/.bash_profile
elif [ -r ~/.bash_login ]; then source ~/.bash_login
elif [ -r ~/.profile ]; then source ~/.profile
fi
source '$SSHHOME'/sshrc;
export PATH=$PATH:"$SSHHOME"
') "$@"
EOF
                )"' | tr -s ' ' $'\n' | openssl enc -base64 -d > \$SSHHOME/bashsshrc
            chmod +x \$SSHHOME/bashsshrc
            echo $'"$(tar czf - -h -C $SSHHOME $files | openssl enc -base64)"' | tr -s ' ' $'\n' | openssl enc -base64 -d | tar mxzf - -C \$SSHHOME
            export SSHHOME=\$SSHHOME
            echo \"$CMDARG\" >> \$SSHHOME/sshrc.bashrc
            bash --rcfile \$SSHHOME/sshrc.bashrc
            "
    else
        echo "No such file: $SSHHOME/sshrc" >&2
        exit 1
    fi


}


function ssh_into_host()
{
        ssh -t "$DOMAIN" $SSHARGS
}

function sshrc_parse()
{
  while [[ -n $1 ]]; do
    case $1 in
      -b | -c | -D | -E | -e | -F | -I | -i | -L | -l | -m | -O | -o | -p | -Q | -R | -S | -W | -w)
        SSHARGS="$SSHARGS $1 $2"
        shift
        ;;
      -*)
        SSHARGS="$SSHARGS $1"
        ;;
      *)
        if [ -z "$DOMAIN" ]; then
          DOMAIN="$1"
        else
          local SEMICOLON=$([[ "$@" = *[![:space:]]* ]] && echo '; ')
          CMDARG="$@$SEMICOLON exit"
          return
        fi
        ;;
    esac
    shift
  done
  if [ -z $DOMAIN ]; then
    ssh $SSHARGS
    exit 1
  fi
}

check_for_openssl
check_for_files
